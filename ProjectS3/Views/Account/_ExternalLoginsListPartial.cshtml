@model ProjectS3.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h5>Đăng nhập bằng tài khoản</h5>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList" class="text-center">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        if (p.AuthenticationType == "Facebook")
                        {
                            <button type="submit" class="btn btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Đăng nhập bằng tài khoản @p.Caption" style="color: white;">
                                <i class="fa fa-facebook"></i>
                                @p.AuthenticationType
                            </button>
                        }

                        if (p.AuthenticationType == "Google")
                        {
                            <button type="submit" class="btn btn-social btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Đăng nhập bằng tài khoản @p.Caption" style="color:white; background-color:#dd4b39;">
                                <i class="fa fa-google-plus"></i>
                                @p.AuthenticationType
                            </button>
                        }
                    }
                </p>
            </div>
        }
    }
}
